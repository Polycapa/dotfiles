add_newline = true
scan_timeout = 2

format = """
$username\
$hostname\
$shlvl\
$directory\
${custom.git_remote}\
${custom.git_branch}\
$git_commit\
$git_state\
$git_status\
$docker_context\
$java\
$nodejs\
$env_var\
${custom.uiaas_cli}\
${custom.angular_server}\
$cmd_duration\
$status\
$line_break\
$jobs\
$battery\
${custom.docker_containers}\ 
$memory_usage\
$line_break\
$time\
$character"""

[cmd_duration]
min_time = 100

[git_commit]
tag_disabled = false

[git_status]
stashed = " ${count}"
untracked = " ${count}"
modified = " ${count}"
staged = " ${count}"
deleted = "✘ ${count}"
conflicted = "ﲅ ${count}"
renamed = "凜 ${count}"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"

[jobs]
threshold = 0

[[battery.display]]
threshold = 10
style = "bold red"

[[battery.display]]
threshold = 50
style = "bold yellow"


[memory_usage]
disabled = false
threshold = -1
symbol = ""
format = "with $symbol [ram ${ram}( | swap ${swap})]($style)"

[nodejs]
format = "using [ $version](bold green) "

[status]
disabled = false
format = "[$symbol]($style) "

[time]
disabled = false
format = "[$time]($style) "

[custom.docker_containers]
description = "Display list of running Docker containers"
command = "~/dotfiles/starship/starship-docker.sh"
when = "docker info"
symbol = ""
style = "bold fg:032"
format="[$symbol Running ($output )]($style)"
shell = ["bash", "--noprofile", "--norc"]

[custom.uiaas_cli]
description = "Display UIaaS CLI version"
command = "uiaas --version"
symbol = ""
when = """ [[ "$PWD" =~ "uiaas" ]] && which uiaas """
style = "bold dimmed white"
format="using [$symbol uiaas cli (v$output )]($style)"
shell = ["bash", "--noprofile", "--norc"]

[custom.angular_server]
description = "Display if Angular server is running on localhost 4200"
command = "echo 'server running'"
when = '''
curl -s --max-time 0,1 localhost:4200
'''
symbol = ""
style = "bold green"
format="with [$symbol ($output )]($style)"
shell = ["bash", "--noprofile", "--norc"]

[custom.git_branch]
description = "Output current branch name or pretty_current_branch output if it exists"
command = "~/dotfiles/starship/starship-current-branch.sh"
symbol = " "
style = "bold purple"
when = """ git rev-parse --is-inside-work-tree 2> /dev/null && [[ "$(git rev-parse --abbrev-ref --symbolic-full-name HEAD)" != "HEAD" ]] """
format = "on [$symbol$output]($style) "
shell = ["bash", "--noprofile", "--norc"]

[custom.git_remote]
# disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2>/dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
  GIT_REMOTE_SYMBOL=""
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
  GIT_REMOTE_SYMBOL=""
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
  GIT_REMOTE_SYMBOL=""
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
  GIT_REMOTE_SYMBOL=""
else
  GIT_REMOTE_SYMBOL=""
fi
echo "$GIT_REMOTE_SYMBOL"
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "at $output "